module.exports = /* eslint-disable */ [{"name":"HelloWorld","description":"Hello World component that prints out Hello and the message passed.","props":{"message":{"type":{"name":"string"},"required":false,"description":"Message to display","defaultValue":{"value":"\"World\"","computed":false}}},"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/** Hello World component that prints out Hello and the message passed. */\nconst HelloWorld = ({ message }) => {\n  return <div>Hello {message}</div>;\n};\n\nHelloWorld.propTypes = {\n  /** Message to display*/\n  message: PropTypes.string\n};\n\nHelloWorld.defaultProps = {\n  message: \"World\"\n};\nexport default HelloWorld;\n","examples":[{"name":"ExampleHelloWorld","description":"Custom message","code":"import React from \"react\";\nimport HelloWorld from \"react-components/HelloWorld/\";\n\n\n/** Custom message */\nconst ExampleHelloWorld = () => {\n    return <HelloWorld message=\"Example Component\"/>\n}\nexport  default  ExampleHelloWorld;"}]},{"name":"ProgressBar","description":"Progress bar that display progress","props":{"percent":{"type":{"name":"number"},"required":true,"description":"Percentage of the progress completed"},"width":{"type":{"name":"number"},"required":true,"description":"Width of the progress bar"},"height":{"type":{"name":"number"},"required":false,"description":"Height of the progress bar","defaultValue":{"value":"15","computed":false}}},"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/** Progress bar that display progress*/\nconst ProgressBar = ({ percent, width, height = 15 }) => (\n  <div\n    style={{\n      border: \"1px solid #d3d3d3\",\n      width: width,\n      backgroundColor: \"#898787\"\n    }}\n  >\n    <div\n      style={{\n        width: ProgressBar.calculateCompletionWidth(width, percent),\n        height,\n        backgroundColor: ProgressBar.calculateCompletionColor(percent)\n      }}\n    />\n    <div />\n  </div>\n);\n\n/** Calculate completed progress */\nProgressBar.calculateCompletionWidth = (width = 0, percent = 0) => {\n  return parseInt(width * (percent / 100), 10);\n};\n\n/** Calculate progress bar color  */\nProgressBar.calculateCompletionColor = percent => {\n  debugger;\n  if (percent === 100) return \"#36a01d\";\n  return percent > 50 ? \"#72e356\" : \"#e02d14\";\n};\n\nProgressBar.propTypes = {\n  /** Percentage of the progress completed*/\n  percent: PropTypes.number.isRequired,\n\n  /** Width of the progress bar*/\n  width: PropTypes.number.isRequired,\n\n  /** Height of the progress bar*/\n  height: PropTypes.number\n};\n\nexport default ProgressBar;\n","examples":[{"name":"ExampleProgressBar100Percent","description":"Progress bar with 100% completion","code":"import React from \"react\";\nimport ProgressBar from \"../../../components/ProgressBar\";\n\n/** Progress bar with 100% completion */\nconst ExampleProgressBar100Percent = () => {\n  return <ProgressBar percent={100} width={100} />;\n};\n\nexport default ExampleProgressBar100Percent;\n"},{"name":"ExampleProgressBar10Percent","description":"Progress bar with 10% completion","code":"import React from \"react\";\nimport ProgressBar from \"../../../components/ProgressBar\";\n\n/** Progress bar with 10% completion */\nconst ExampleProgressBar10Percent = () => {\n  return <ProgressBar percent={10} width={100} />;\n};\n\nexport default ExampleProgressBar10Percent;\n"},{"name":"ExampleProgressBar10PercentWith30Height","description":"Progress bar with 10% completion with 30px height","code":"import React from \"react\";\nimport ProgressBar from \"../../../components/ProgressBar\";\n\n/** Progress bar with 10% completion with 30px height*/\nconst ExampleProgressBar10PercentWith30Height = () => {\n  return <ProgressBar percent={10} width={100} height={30} />;\n};\n\nexport default ExampleProgressBar10PercentWith30Height;\n"},{"name":"ExampleProgressBar60Percent","description":"Progress bar with 60% completion","code":"import React from \"react\";\nimport ProgressBar from \"../../../components/ProgressBar\";\n\n/** Progress bar with 60% completion */\nconst ExampleProgressBar60Percent = () => {\n  return <ProgressBar percent={60} width={100} />;\n};\n\nexport default ExampleProgressBar60Percent;\n"}]}]